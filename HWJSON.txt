1. Создать внешний репозиторий c названием JSON. 

 2. Клонировать репозиторий JSON на локальный компьютер

git clone https://github.com/maryrachkovskaya/JSON.git

 3. Внутри локального JSON создать файл “new.json”.

ls -la 

total 0
drwxr-xr-x    3 marysamonchik  staff    96 20 июн 20:17 .
drwxr-xr-x  160 marysamonchik  staff  5120 20 июн 20:16 ..
drwxr-xr-x    4 marysamonchik  staff   128 20 июн 20:17 JSON

cd JSON

 touch new.json

 4. Добавить файл под гит.

git status 

git add new.json

git status  

 5. Закоммитить файл.

git commit -m «new file json"

 6. Отправить файл на внешний GitHub репозиторий.

git push 

 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.

cat >> new.json

{"ФИО": "Рачковская Мария Анатольевна", "Возраст": 34, «Количество домашних животных: 0, «Будущая желаемая зарплата»: 1000$}

control C

 8. Отправить изменения на внешний репозиторий.

git status 

git add new.json

git status  

git commit -m «add personal information»

git push

 9. Создать файл preferences.json

 10. В файл preferences.json добавить информацию о своих предпочтениях

vim preferences.json

I

 {

"Любимый фильм»: «Я началао", «Любимый сериал»: «нет", "любимая еда»: "сырники", "любимое время года": «весна», "сторона которую хотели бы посетить»: Япония

}

esc

:wq

 11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON

touch sklls.json

cat >>  skills.json

{
"Skills": [
"Git bash",
"Git hub",
"Клиент-серверная архитектура",
"Postman",
"HTTP",
"HTTPS",
"API",
"JSON",
"XML",
"Visual studio code",
"Charles",
"Fidler",
"VPN",
"Мобилное тестирование",
"XCode",
"SQL",
"Postgres",
"Redis",
"Jmeter",
"Scrum"
]
}
Control C

 12. Отправить сразу 2 файла на внешний репозиторий.

git add .

git commit -m «add twi files»

git git push  

 13. На веб интерфейсе создать файл bug_report.json.

 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

git fetch

 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

git fetch

 20. Синхронизировать внешний и локальный репозиторий JSON

git fetch

